@import url('https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100..900;1,100..900&family=Playwrite+NG+Modern:wght@100..400&display=swap');


@tailwind base;
@tailwind components;
@tailwind utilities;

/* styles/globals.css or a similar global stylesheet */

/* In your index.css or another global CSS file */
@font-face {
    font-family: 'Glimmer of Light';
    src: url('/glimmer\ of\ light.otf') format('truetype');
    font-weight: normal;
    font-style: normal;
  }
  
  .font-glimmer-of-light {
    font-family: 'Glimmer of Light', sans-serif;
  }

  .video-container {
    width: 1140px;
    height: 515px;
    top: 429.28px;
    left: 113px;
    margin-top: 25px;
    margin-bottom: 25px;
    border-radius: 40px;
    overflow: hidden;
    transition: transform 0.5s ease-in-out, width 0.5s ease-in-out, height 0.5s ease-in-out;
  }
  
  .video {
    transition: transform 0.3s ease;
  }
  
  .video.zoomed {
    transform: scale(1.2); /* Example scale value */
  }

  .video-container.zoomed {
    transform: scale(1.5); 
    width: 100vw;  
    height: 100vh; 
    position: fixed; 
    top: 0;
    left: 0;
    z-index: 10; 
  }
  

  #cards {
    padding-bottom: calc(var(--numcards) * var(--card-top-offset));
    margin-bottom: var(--card-margin);
  }
  
  #card_1 {
    --index: 1;
  }
  
  #card_2 {
    --index: 2;
  }

  .card {
    position: sticky;
    top: 0;
    padding-top: calc(var(--index) * var(--card-top-offset));
  }
  
  @supports (animation-timeline: works) {
    @scroll-timeline cards-element-scrolls-in-body {
      source: selector(body);
      scroll-offsets:
        selector(#cards) start 1,
        selector(#cards) start 0;
      start: selector(#cards) start 1;
      end: selector(#cards) start 0;
      time-range: 4s;
    }
  
    .card {
      --index0: calc(var(--index) - 1);
      --reverse-index: calc(var(--numcards) - var(--index0));
      --reverse-index0: calc(var(--reverse-index) - 1);
    }
    
    .card__content {
      transform-origin: 50% 0%;
      will-change: transform;
      --duration: calc(var(--reverse-index0) * 1s);
      --delay: calc(var(--index0) * 1s);
      animation: var(--duration) linear scale var(--delay) forwards;
      animation-timeline: cards-element-scrolls-in-body;
    }
  
    @keyframes scale {
      to {
        transform: scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
      }
    }
  }

  #cards {
    list-style: none;
    outline: calc(var(--outline-width) * 10) solid blue;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(var(--numcards), var(--card-height));
    gap: var(--card-margin);
  }
  
  .card {
    outline: var(--outline-width) solid hotpink;
  }